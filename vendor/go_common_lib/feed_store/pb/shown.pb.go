// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shown.proto

package shown

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Shown struct {
	Ids                  []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Shown) Reset()         { *m = Shown{} }
func (m *Shown) String() string { return proto.CompactTextString(m) }
func (*Shown) ProtoMessage()    {}
func (*Shown) Descriptor() ([]byte, []int) {
	return fileDescriptor_shown_8fa8e7f30d2df807, []int{0}
}
func (m *Shown) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shown.Unmarshal(m, b)
}
func (m *Shown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shown.Marshal(b, m, deterministic)
}
func (dst *Shown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shown.Merge(dst, src)
}
func (m *Shown) XXX_Size() int {
	return xxx_messageInfo_Shown.Size(m)
}
func (m *Shown) XXX_DiscardUnknown() {
	xxx_messageInfo_Shown.DiscardUnknown(m)
}

var xxx_messageInfo_Shown proto.InternalMessageInfo

func (m *Shown) GetIds() []uint64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func init() {
	proto.RegisterType((*Shown)(nil), "Shown")
}

func init() { proto.RegisterFile("shown.proto", fileDescriptor_shown_8fa8e7f30d2df807) }

var fileDescriptor_shown_8fa8e7f30d2df807 = []byte{
	// 65 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0xce, 0xc8, 0x2f,
	0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x92, 0xe4, 0x62, 0x0d, 0x06, 0x71, 0x85, 0x04,
	0xb8, 0x98, 0x33, 0x53, 0x8a, 0x25, 0x18, 0x15, 0x98, 0x35, 0x58, 0x82, 0x40, 0xcc, 0x24, 0x36,
	0xb0, 0x0a, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x7a, 0xdc, 0x7d, 0x30, 0x00, 0x00,
	0x00,
}
